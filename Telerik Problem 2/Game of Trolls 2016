function solve (args) {
	var field = args[0].split(" ").map(Number),
		rows = field[0],
		cols = field[1],
		positionOfPlayers = args[1].split(";").map(function(line){
			return line.split(" ").map(Number);
		}),
		wTrollRow = positionOfPlayers[0][0],
		wTrollCol = positionOfPlayers[0][1],
		nTrollRow = positionOfPlayers[1][0],
		nTrollCol = positionOfPlayers[1][1],
		princesRow = positionOfPlayers[2][0],
		princesCol = positionOfPlayers[2][1],
		moves = args.slice(2).map(function(line){
			return line.split(" ");
		}),
		dir = {},
		personWhoMoves = {},
		matrix = [],
		holdArr = [],
		i,
		j;

	function moveToMake (person, mov){
		dir = {
			u: -1,
			d: +1,
			l: -1,
			r: +1
		};
		personWhoMoves = {
			Lsjtujzbo: dir[mov],
			Wboup: dir[mov],
			Nbslbub: dir[mov]
		};

		if(person === "Lsjtujzbo"){
			if(mov === "u" || mov === "d"){
				if(!(matrix[princesRow][princesCol] === "T")){
					matrix[princesRow][princesCol] = 0;
				}
				princesRow += personWhoMoves[person];
				if(princesRow >= rows){
					princesRow -= 1;
				} else if (princesRow < 0){
					princesRow += 1;
				}
				matrix[princesRow][princesCol] = "L";
			} else {
				if(!(matrix[princesRow][princesCol] === "T")){
					matrix[princesRow][princesCol] = 0;
				}
				princesCol += personWhoMoves[person];
				if(princesCol >= cols){
					princesCol -= 1;
				} else if (princesCol < 0){
					princesCol += 1;
				}
				matrix[princesRow][princesCol] = "L";
			}
		}
		if(!(matrix[wTrollRow][wTrollCol] === "T/W")){
			if(person === "Wboup"){
				if(mov === "u" || mov === "d"){
					matrix[wTrollRow][wTrollCol] = 0;
					wTrollRow += personWhoMoves[person];
					// if they go out of the field
					if(wTrollRow >= rows){
						wTrollRow -= 1;
					} else if (wTrollRow < 0){
						wTrollRow += 1;
					}
					if(matrix[wTrollRow][wTrollCol] === "T"){
						matrix[wTrollRow][wTrollCol] = "T/W";
					} else if(matrix[wTrollRow][wTrollCol] === "T/N"){
						matrix[wTrollRow][wTrollCol] = 0;
					} else {
						matrix[wTrollRow][wTrollCol] = "W";
					}
				} else {
					matrix[wTrollRow][wTrollCol] = 0;
					wTrollCol += personWhoMoves[person];
					if(wTrollCol >= cols){
						wTrollCol -= 1;
					} else if (wTrollCol < 0){
						wTrollCol += 1;
					}
					if(matrix[wTrollRow][wTrollCol] === "T"){
						matrix[wTrollRow][wTrollCol] = "T/W";
					}else if(matrix[wTrollRow][wTrollCol] === "T/N"){
						matrix[wTrollRow][wTrollCol] = 0;
					} else {
						matrix[wTrollRow][wTrollCol] = "W";
					}
				}
			}
		}
		if(!(matrix[nTrollRow][nTrollCol] === "T/N")){
			if(person === "Nbslbub"){
				if(mov === "u" || mov === "d"){
					matrix[nTrollRow][nTrollCol] = 0;
					nTrollRow += personWhoMoves[person];
					if(nTrollRow >= rows){
						nTrollRow -= 1;
					} else if (nTrollRow < 0){
						nTrollRow += 1;
					}
					if(matrix[nTrollRow][nTrollCol] === "T"){
						matrix[nTrollRow][nTrollCol] = "T/N";
					} else if(matrix[nTrollRow][nTrollCol] === "T/W"){
						matrix[nTrollRow][nTrollCol] = 0;
					} else {
						matrix[nTrollRow][nTrollCol] = "N";
					}
				} else {
					matrix[nTrollRow][nTrollCol] = 0;
					nTrollCol += personWhoMoves[person];
					if(nTrollCol >= cols){
						nTrollCol -= 1;
					} else if (nTrollCol < 0){
						nTrollCol += 1;
					}
					if(matrix[nTrollRow][nTrollCol] === "T"){
						matrix[nTrollRow][nTrollCol] = "T/N";
					} else if(matrix[nTrollRow][nTrollCol] === "T/W"){
						matrix[nTrollRow][nTrollCol] = 0;
					} else {
						matrix[nTrollRow][nTrollCol] = "N";
					}
				}
			}
		}
	}

	for(i = 0; i < rows; i += 1){
		for(j = 0; j < cols; j += 1){
			holdArr[j] = 0;
		}
		matrix.push(holdArr);
		holdArr = [];
	}
	i = 0;
	j = 1;

	matrix[princesRow][princesCol] = "L";
	matrix[wTrollRow][wTrollCol] = "W";
	matrix[nTrollRow][nTrollCol] = "N";

	while(1){
		if(matrix[wTrollRow][wTrollCol] === "T/W" && matrix[nTrollRow][nTrollCol] === "T/N"){
			return console.log("Lsjtujzbo is saved! " + wTrollRow + " " + wTrollCol + " " + nTrollRow + " " + nTrollCol);
		}
		if((wTrollRow - princesRow <= 1 && wTrollRow - princesRow >= -1) &&
		 (wTrollCol - princesCol <= 1 && wTrollCol - princesCol >= -1)){
			return console.log("The trolls caught Lsjtujzbo at " + princesRow + " " + princesCol);
		}
		if((nTrollRow - princesRow <= 1 && nTrollRow - princesRow >= -1) &&
		 (nTrollCol - princesCol <= 1 && nTrollCol - princesCol >= -1)){
			return console.log("The trolls caught Lsjtujzbo at " + princesRow + " " + princesCol);
		}
		if(princesRow === rows - 1 && princesCol === cols - 1){
			return console.log("Lsjtujzbo is saved! " + wTrollRow + " " + wTrollCol + " " + nTrollRow + " " + nTrollCol);
		}
		if(moves[i][0] === "mv"){
			moveToMake(moves[i][j], moves[i][j + 1]);
		} else if (moves[i][0] === "lay"){
			matrix[princesRow][princesCol] = "T";
		}
		i += 1;
	}

}


var arr = [
"11 11",
"10 10;9 9;0 0",
"mv Lsjtujzbo d",
"mv Lsjtujzbo d",
"lay trap",
"mv Lsjtujzbo r",
"mv Lsjtujzbo r",
"lay trap",
"mv Lsjtujzbo r",
"lay trap",
"mv Lsjtujzbo u",
"lay trap",
"mv Lsjtujzbo u",
"lay trap",
"mv Lsjtujzbo l",
"mv Lsjtujzbo d",
"mv Lsjtujzbo l",
"lay trap",
"mv Lsjtujzbo u",
"mv Lsjtujzbo r",
"mv Nbslbub l",
"mv Nbslbub l",
"mv Nbslbub l",
"mv Nbslbub l",
"mv Nbslbub l",
"mv Nbslbub u",
"mv Nbslbub u",
"mv Nbslbub u",
"mv Nbslbub u",
"mv Nbslbub l",
"mv Nbslbub l",
"mv Nbslbub u",
"mv Nbslbub u",
"mv Nbslbub u",
"mv Wboup u",
"mv Wboup u",
"mv Wboup u",
"mv Wboup u",
"mv Wboup u",
"mv Wboup u",
"mv Wboup u",
"mv Wboup u",
"mv Wboup u",
"mv Wboup l",
"mv Wboup l",
"mv Wboup l",
"mv Wboup l",
"mv Wboup d",
"mv Wboup l",
"mv Wboup l",
"mv Wboup l"
];
solve(arr);
